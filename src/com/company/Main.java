package com.company;

public class Main {

    public static void main(String[] args) {

        Flyable[] flyables = {new Parrot(),new Plane()};
        Swimmable[] swimmables = {new Shark(),new Ship(),new Whale(),new Duck()};
        Runnable[] runnables = {new Person(),new Cat()};

        flyables[0].fly();
        flyables[1].fly();
        swimmables[0].swim();
        swimmables[1].swim();
        swimmables[2].swim();
        swimmables[3].swim();
        runnables[0].run();
        runnables[1].run();



//        1. Как вы понимаете понятие полиморфизма?
//
//        полиморфизм это когда наследники образуют массив с типом родителя
//
//        2. Что такое кастинг(cast) типов в мире программирования?
//
//        когда в наследнике появляется новый метод которого нету в родителе мы перед вызовом метода должны в скобках прописать тип нужного нам класса
//
//        3. Зачем мы храним объекты типа Shark, Duck, Turtle в одном массиве?
//
//        если бы мы его хранили в разных массивах то это будет отнимать много времени много места и соотвественно байтов
//
//        4. Какие есть ограничения при хранении разных типов (Shark, Duck, Turtle и т.д.) в одном массиве (Swimmable)?
//
//        ограничения в том что разные классы имеют разные методы а swimmable не имеет к ним данных но есть решение этой проблемы  так наз cast
//
//        5. Что произойдет после того как отработает следующая строчка кода, опишите подробнее:
//
//        создастся ссылка не на что не указывающая с типом Person и все
//
//        Person[] people;

    }
}